<c-button>
    <button
        class="
         { props?.transparent ? ' transparent' : null }
         { props?.primary ? ' primary' : null }
         { props?.fill ? ' fill' : null }
         { props?.secondary ? ' secondary' : null }
         { props?.tertiary ? ' tertiary' : null }

         { props?.small ? ' small' : null }
         { props?.medium ? ' medium' : null }
         { props?.large ? ' large' : null }
         { props?.extra ? ' extra' : null }

         { props?.responsive ? ' responsive' : null }
         { props?.outlined ? ' border' : null }
         { props?.smallround ? ' small-round' : null }
         { props?.round ? ' round' : null }
         { props?.circle ? ' circle' : null }
         { props?.square ? ' square' : null }
         { props?.leftround ? ' left-round' : null }
         { props?.rightround ? ' right-round' : null }
         { props?.topround ? ' top-round' : null }
         { props?.bottomround ? ' bottom-round' : ''}

         { props?.vertical ? ' vertical' : null }

         { props?.extend ? ' extend' : null }

         { props?.smallelevate ? ' small-elevate' : null }
         { props?.mediumelevate ? ' medium-elevate' : null }
         { props?.largeelevate ? ' large-elevate' : null }

         { props?.class }
        "
    >
        <img class={props?.inline ? null : "responsive" } if={ props?.img } src={ props.img }>
        <i if={ props?.icon }>{ props.icon }</i>
        <span if={ state.hasText === true }><slot></slot></span>
        <slot name="badge"></slot>
    </button>
    <script>
        export default {
            onMounted() {
                if (this?.slots && this.slots.find(el => el.id === 'default')) {
                    this.update({ hasText : true });
                }
            },
            state: {
                hasText: false
            }
        }
    </script>
</c-button>